AWSTemplateFormatVersion: 2010-09-09

Transform: S3Objects

Description: >-
  This S3 bucket will be used for development and production,
  and for storing partly or fully processed data

Parameters:

  BucketName:
    Type: String
    Description: Name of the bucket.
    Default: ''

  SynapseIds:
    Type: List<String>
    Default: ''
    Description: Synapse ids to set as owners of this bucket
    ConstraintDescription: >-
      List of Synapse users or team IDs separated by commas
      (i.e. 1111111, 2222222)

  Namespace:
    Type: String
    Description: >-
      The namespace string used to build up the path to the correct object keys
      in the bucket

Conditions:
  HasBucketName: !Not [!Equals [!Ref BucketName, ""]]
  ConnectToSynapse:
    !Not [!Equals [!Join [",", !Ref SynapseIds], ""]]

Resources:
  Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !If [HasBucketName, !Ref BucketName, !Ref 'AWS::NoValue']
      AccessControl: Private
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AccountRead
            Effect: Allow
            Principal:
              AWS: !Sub '${AWS::AccountId}'
            Action:
              - 's3:Get*'
              - 's3:List*'
            Resource:
              - !Sub 'arn:aws:s3:::${Bucket}'
              - !Sub 'arn:aws:s3:::${Bucket}/*'
          - !If
            - ConnectToSynapse
            - Sid: SynapseBucketAccess
              Effect: Allow
              Principal:
                AWS: '325565585839'
              Action:
                - 's3:ListBucket*'
                - 's3:GetBucketLocation'

              Resource: !Sub ${Bucket.Arn}
            - !Ref AWS::NoValue
          - !If
            - ConnectToSynapse
            - Sid: SynapseObjectAccess
              Effect: Allow
              Principal:
                AWS: '325565585839'
              Action:
                - 's3:*Object*'
                - 's3:*MultipartUpload*'
              Resource: !Sub ${Bucket.Arn}/*
            - !Ref AWS::NoValue

  SynapseOwnerFile:
    Type: AWS::S3::Object
    Condition: ConnectToSynapse
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - E3001
    Properties:
      Target:
        Bucket: !Ref Bucket
        Key: !Sub ${Namespace}/parquet/owner.txt
        ContentType: text
      Body: !Join [ ",", !Ref SynapseIds ]

Outputs:

  BucketName:
    Value: !Ref Bucket
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-BucketName'

  BucketArn:
    Value: !GetAtt Bucket.Arn
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-BucketArn'
