name: upload-and-deploy

on: [push]

#env:
#  NAMESPACE: recover
#  PYTHON_VERSION: 3.9

jobs:

  pre-commit:

    name: Run pre-commit hooks against all files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
      - uses: pre-commit/action@v3.0.0

  load-config:

    name: Loads config file for use in all jobs
    runs-on: ubuntu-latest
    needs: pre-commit
    env:
      REPO_ENVIRONMENT: develop
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
      - name: Get config
        id: get-config
        shell: python
        run: |
          import os
          import yaml

          print(os.getenv["REPO_ENVIRONMENT"])
          with open("./config/config.yaml", "r") as stream:
          try:
            config = yaml.safe_load(stream)
          except yaml.YAMLError as exc:
            print(exc)
          # setting values of github env vars
          with open(os.environ['GITHUB_ENV'], 'a') as fh:
            print('NAMESPACE=config["default_stack_tag"]["project_code"]', file=fh)
            print('PYTHON_VERSION=config["pipenv_python_version"]', file=fh)
            print('AWS_CREDENTIALS_IAM_ROLE=config[os.getenv["REPO_ENVIRONMENT"]]["AWS_CREDENTIALS_IAM_ROLE"]', file=fh)
            print('CFN_BUCKET=config[os.getenv["REPO_ENVIRONMENT"]]["CFN_BUCKET"]', file=fh)


  upload-files:

    name: Upload files to S3 bucket in development
    runs-on: ubuntu-latest
    needs: [pre-commit, load-config]
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    steps:

      - name: Setup code, pipenv, aws
        uses: Sage-Bionetworks/action-pipenv-aws-setup@v3
        with:
          role_to_assume: ${{ env.AWS_CREDENTIALS_IAM_ROLE }}
          role_session_name: GitHubActions-${{ github.repository_owner }}-${{ github.event.repository.name }}-${{ github.run_id }}
          python_version: ${{ env.PYTHON_VERSION }}

      - name: Setup sam
        uses: aws-actions/setup-sam@v2

      - name: Set namespace for non-default branch
        if: github.ref_name != 'main'
        run: echo "NAMESPACE=$GITHUB_REF_NAME" >> $GITHUB_ENV

      - name: Copy files to templates bucket, use dev cloudformation bucket
        run: python src/scripts/manage_artifacts/artifacts.py --upload --namespace $NAMESPACE --cfn_bucket ${{ env.CFN_BUCKET }}

  # sceptre-deploy-branch:

  #   name: Deploy branch using sceptre
  #   runs-on: ubuntu-latest
  #   needs: [pre-commit, upload-files]
  #   environment: develop
  #   # These permissions are needed to interact with GitHub's OIDC Token endpoint.
  #   permissions:
  #     id-token: write
  #     contents: read

  #   steps:
  #     - name: Setup code, pipenv, aws
  #       uses: Sage-Bionetworks/action-pipenv-aws-setup@v3
  #       with:
  #         role_to_assume: ${{ vars.AWS_CREDENTIALS_IAM_ROLE }}
  #         role_session_name: GitHubActions-${{ github.repository_owner }}-${{ github.event.repository.name }}-${{ github.run_id }}
  #         python_version: ${{ env.PYTHON_VERSION }}

  #     - name: Create directory for remote sceptre templates
  #       run: mkdir -p templates/remote/

  #     - name: Deploy namespaced sceptre stacks to dev
  #       if: github.ref_name != 'main'
  #       run: pipenv run sceptre --var "namespace=$GITHUB_REF_NAME" launch develop --yes

  #     - name: Deploy non-namespaced sceptre stacks to dev
  #       if: github.ref_name == 'main'
  #       run: pipenv run sceptre --var "namespace=$NAMESPACE" launch develop --yes
